*audreyer-config.txt*	For NVIM version 0.2.0	Last change: 2017-11-18 
*audreyer-config*

Fong's personal cheat sheet for Vim. 

===============================================================================
CONTENTS

	1. Introduction.......................................|audreyer-introduction|
	2. Keymaps.................................................|audreyer-keymaps|
	2. Plugin list.........................................|audreyer-plugin-list|

===============================================================================
1. Introduction                                    *audreyer-config-Introduction*


===============================================================================
2. Keymaps                                                     *audreyer-keymaps*

This is my own vimsheet, here you can see my own key mapping and all native nvim
key mapping and all plugin key mapping. I also use all map i would use in few
time, and map i will not use but set by nvim and pluggin i used.


===============================================================================
Native

--- Command mode

    :h[elp] keyword - open help for keyword
    :w - write (save) the file, but don't exit
    :wq or :x or ZZ - write (save) and quit
    :q - quit (fails if there are unsaved changes)
    :q! or ZQ - quit and throw away unsaved changes
    :wqa - write (save) and quit on all tabs
    :%s/old/new/g - replace all old with new throughout file
    :noh[lsearch] - remove highlighting of search matches
    :e[dit] file - edit a file in a new buffer

--- Normal mode motion

    h - move cursor left
    j - move cursor down
    k - move cursor up
    l - move cursor right
    w - jump forwards to the start of a word
    W - jump forwards to the start of a word (words can contain punctuation)
    e - jump forwards to the end of a word
    E - jump forwards to the end of a word (words can contain punctuation)
    b - jump backwards to the start of a word
    B - jump backwards to the start of a word (words can contain punctuation)
    % - move to matching character (default supported pairs: '()', '{}', '[]' - use :h matchpairs in vim for more info)
    0 - jump to the start of the line
    ^ - jump to the first non-blank character of the line
    $ - jump to the end of the line
    fx - jump to next occurrence of character x
    Fx - jump to the previous occurrence of character x
		[command]i[motion] - apply [command] inner [motion] ex : "diw" delete word under cursor

--- Insert mode - inserting/appending text

    Ctrl + h - delete the character before the cursor during insert mode
    Esc or Ctrl + c - exit insert mode

--- Normal mode - start	insert/visual mode

    i - insert before the cursor
    I - insert at the beginning of the line
    a - insert (append) after the cursor
    A - insert (append) at the end of the line
    o - append (open) a new line below the current line
    O - append (open) a new line above the current line
    v - start visual mode, mark lines, then do a command (like y-yank)
    V - start linewise visual mode
    Ctrl + v - start visual block mode

--- Normal mode - Editing

    r - replace a single character.
    J - join line below to the current one with one space in between
    u - undo
    Ctrl + r - redo
    . - repeat last command

--- Visual mode 

    Esc or Ctrl + c - exit visual mode
    > - shift text right
    < - shift text left
    y - yank (copy) marked text
    d - delete marked text
    ~ - switch case

--- Normal mode - Cut and paste

    yy - yank (copy) a line
    p - put (paste) the clipboard after cursor
    dd - delete (cut) a line
    x - delete (cut) character

---	Normal mode - Indent text

    >> - indent (move right) line one shiftwidth
    << - de-indent (move left) line one shiftwidth
    [number]== - re-indent [number] line (without [number] for current)
    >% - indent a block with () or {} (cursor on brace)
    <% - de-indent a block with () or {} (cursor on brace)
    =% - re-indent a block with () or {} (cursor on brace)

--- Search and replace

    /pattern - search for pattern
    n - repeat search in same direction
    N - repeat search in opposite direction


--- Split and modify window

    :sp[lit] file - open a file in a new buffer and split window
    :vs[plit] file - open a file in a new buffer and vertically split window
    Ctrl + wh - move cursor to the left window (vertical split)
    Ctrl + wl - move cursor to the right window (vertical split)
    Ctrl + wj - move cursor to the window below (horizontal split)
    Ctrl + wk - move cursor to the window above (horizontal split)

===============================================================================
Plugin



===============================================================================
Personnal

--- Leader key

<leader> = space

--- Insert mode

<Up> : unactive
<Down> : unactive
<Left> : unactive
<Right> : unactive

--- Normal mode

<Up> : unactive
<Down> : unactive
<Left> : unactive
<Right> : unactive

<leader>h : open and verticale split audreyer-help forr editing
<leader>a : open file explorer "tree.nvim"

===============================================================================
Unused Native

--- Command

    :sav[eas] file - save file as
    :clo[se] - close current pane
    :ter[minal] - open a terminal window

--- Cursor movement
    gj - move cursor down (multi-line text)
    gk - move cursor up (multi-line text)
    H - move to top of screen
    M - move to middle of screen
    L - move to bottom of screen
    ge - jump backwards to the end of a word
    gE - jump backwards to the end of a word (words can contain punctuation)
    g_ - jump to the last non-blank character of the line
    gg - go to the first line of the document
    G - go to the last line of the document
    5gg or 5G - go to line 5
    gd - move to local declaration
    gD - move to global declaration
    tx - jump to before next occurrence of character x
    Tx - jump to after previous occurrence of character x
    ; - repeat previous f, t, F or T movement
    , - repeat previous f, t, F or T movement, backwards
    zz - center cursor on screen
    zt - position cursor on top of the screen
    zb - position cursor on bottom of the screen
    Ctrl + e - move screen down one line (without moving cursor)
    Ctrl + y - move screen up one line (without moving cursor)
    Ctrl + b - move back one full screen
    Ctrl + f - move forward one full screen
    Ctrl + d - move forward 1/2 a screen
    Ctrl + u - move back 1/2 a screen

--- Insert mode - inserting/appending text

    Ctrl + w - delete word before the cursor during insert mode

--- Editing

    gwip - reflow paragraph

--- Marking text (visual mode)

    aw - mark a word
    ab - a block with ()
    aB - a block with {}
    at - a block with <> tags
    ib - inner block with ()
    iB - inner block with {}
    it - inner block with <> tags

--- Unused Special registers:

 0 - last yank
 " - unnamed register, last delete or yank
 % - current file name
 # - alternate file name
 = - expression register
 _ - black hole register


--- Command - Search delete Cut and paste

    :3,5d - delete lines starting from 3 to 5
    :.,$d - From the current line to the end of the file
    :.,1d - From the current line to the beginning of the file
    :10,$d - From the 10th line to the beginning of the file
    :g/{pattern}/d - delete all lines containing pattern
    :g!/{pattern}/d - delete all lines not containing pattern

--- Indent text

    >at - indent a block with <> tags
    3== - re-indent 3 lines
    ]p - paste and adjust indent to current line

--- Exiting

    :w !sudo tee % - write out the current file using sudo

--- Search and replace

    ?pattern - search backward for pattern

--- Tabs

    Ctrl + wT - move the current split window into its own tab
    #gt - move to tab number #
    :tabm[ove] # - move current tab to the #th position (indexed from 0)
    :tabc[lose] - close the current tab and all its windows
    :tabo[nly] - close all tabs except for the current one
    :tabdo command - run the command on all tabs (e.g. :tabdo q - closes all opened tabs)

--- Working with multiple files

    :bn[ext] - go to the next buffer
    :bp[revious] - go to the previous buffer
    :bd[elete] - delete a buffer (close a file)
    :b[uffer]# - go to a buffer by index #
    :b[uffer] file - go to a buffer by file
    :ls or :buffers - list all open buffers
    :vert[ical] ba[ll] - edit all buffers as vertical windows
    :tab ba[ll] - edit all buffers as tabs

--- Unknow feature "Marks and positions"

    :marks - list of marks
    ma - set current position for mark A
		a - jump to position of mark A
    y`a - yank text to position of mark A
		0 - go to the position where Vim was previously exited
		" - go to the position when last editing this file
		\` - (without \) go to the position of the last change in this file
    `` - go to the position before the last jump
    :ju[mps] - list of jumps
    Ctrl + i - go to newer position in jump list
    Ctrl + o - go to older position in jump list
    :changes - list of changes
    g, - go to newer position in change list
    g; - go to older position in change list
    Ctrl + ] - jump to the tag under cursor

--- Unknow feature "very magic search"

    \vpattern - 'very magic' pattern: non-alphanumeric characters are interpreted as special regex symbols (no escaping needed)

--- Unknow feature "Diff"

    zf - manually define a fold up to motion
    zd - delete fold under the cursor
    za - toggle fold under the cursor
    zo - open fold under the cursor
    zc - close fold under the cursor
    zr - reduce (open) all folds by one level
    zm - fold more (close) all folds by one level
    zi - toggle folding functionality
    ]c - jump to start of next change
    [c - jump to start of previous change
    do or :diffg[et] - obtain (get) difference (from other buffer)
    dp or :diffpu[t] - put difference (to other buffer)
    :diffthis - make current window part of diff
    :dif[fupdate] - update differences
    :diffo[ff] - switch off diff mode for current window



===============================================================================
Unused Plugin                                         

--- Comment

    --- NORMAL mode - Linewise

		gcc - Toggles the current line using linewise comment
		[count]gcc - Toggles the number of line given as a prefix-count using linewise
		gc[count]{motion} - (Op-pending) Toggles the region using linewise comment
		gco - Insert comment to the next line and enters INSERT mode
		gcO - Insert comment to the previous line and enters INSERT mode
		gcA - Insert comment to end of the current line and enters INSERT mode
		gcw - Toggle from the current cursor position to the next word
		gc$ - Toggle from the current cursor position to the end of line
		gc} - Toggle until the next blank line
		gc5j - Toggle 5 lines after the current cursor position
		gc8k - Toggle 8 lines before the current cursor position
		gcip - Toggle inside of paragraph
		gca} - Toggle around curly brackets
		
    --- NORMAL mode - Blockwise

		gb2} - Toggle until the 2 next blank line
		gbaf - Toggle comment around a function (w/ LSP/treesitter support)
		gbac - Toggle comment around a class (w/ LSP/treesitter support)
		gbc - Toggles the current line using blockwise comment
		[count]gbc - Toggles the number of line given as a prefix-count using blockwise
		gb[count]{motion} - (Op-pending) Toggles the region using blockwise comment

    ---	VISUAL mode

		gc - Toggles the region using linewise comment
		gb - Toggles the region using blockwise comment

--- Telescope

		<C-n>/<Down> : Next item
		<C-p>/<Up> : Previous item
		j/k : Next/previous (in normal mode)
		H/M/L : Select High/Middle/Low (in normal mode)
		gg/G : Select the first/last item (in normal mode)
		<CR> : Confirm selection
		<C-x> : Go to file selection as a split
		<C-v> : Go to file selection as a vsplit
		<C-t> : Go to a file in a new tab
		<C-u> : Scroll up in preview window
		<C-d> : Scroll down in preview window
		<C-f> : Scroll left in preview window
		<C-k> : Scroll right in preview window
		<M-f> : Scroll left in results window
		<M-k> : Scroll right in results window
		<C-/> : Show mappings for picker actions (insert mode)
		? : Show mappings for picker actions (normal mode)
		<C-c> : Close telescope
		<Esc> : Close telescope (in normal mode)
		<Tab> : Toggle selection and move to next selection
		<S-Tab> : Toggle selection and move to prev selection
		<C-q> : Send all items not filtered to quickfixlist (qflist)
		<M-q> : Send all selected items to qflist

--- Tree plugin - in file explorer

		<C-]> :	CD
		<C-e> :	Open: In Place
		<C-k> :	Info
		<C-r> :	Rename: Omit Filename
		<C-t> :	Open: New Tab
		<C-v> :	Open: Vertical Split
		<C-x> :	Open: Horizontal Split
		<BS> : Close Directory
		<CR> : Open
		<Tab> :	Open Preview
		> :	Next Sibling
		\< : (without \) Previous Sibling
		. : Run Command
		- : Up
		a : Create
		bdDelete : Bookmarked
		bmv : Move Bookmarked
		B : Toggle Filter: No Buffer
		c : Copy
		C : Toggle Filter: Git Clean
		[c : Prev Git
		]c : Next Git
		d : Delete
		D : Trash
		E : Expand All
		e : Rename: Basename
		]e: Next Diagnostic
		[e: Prev Diagnostic
		F : Clean Filter
		f : Filter
		g?: Help
		gy : Copy Absolute Path
		H : Toggle Filter: Dotfiles
		I : Toggle Filter: Git Ignore
		J : Last Sibling
		K : First Sibling
		m : Toggle Bookmark
		o : Open
		O : Open: No Window Picker
		p : Paste
		P : Parent Directory
		q : Close
		r : Rename
		R : Refresh
		s : Run System
		S : Search
		U : Toggle Filter: Hidden
		W : Collapse
		x : Cut
		y : Copy Name
		Y : Copy Relative Path
		<2-LeftMouse> : Open
		<2-RightMouse> : CD

===============================================================================
Next to use

--- All

		[command]a[motion] - apply [command] inner [motion] and the space after or before it
    K - open man page for word under the cursor
    } - jump to next paragraph (or function/block, when editing code)
    { - jump to previous paragraph (or function/block, when editing code)
    Ctrl + j - begin new line during insert mode
    Ctrl + t - indent (move right) line one shiftwidth during insert mode
    Ctrl + d - de-indent (move left) line one shiftwidth during insert mode
    Ctrl + n - insert (auto-complete) next match before the cursor during insert mode
    Ctrl + p - insert (auto-complete) previous match before the cursor during insert mode
    Ctrl + rx - insert the contents of register x
    Ctrl + ox - Temporarily enter normal mode to issue one normal-mode command x.
    R - replace more than one character, until ESC is pressed.
    gJ - join line below to the current one without space in between
    g~ - switch case up to motion
    gu - change to lowercase up to motion
    gU - change to uppercase up to motion
    u (visual mode) - change marked text to lowercase
    U (visual mode) - change marked text to uppercase
    cc - change (replace) entire line
    c$ or C - change (replace) to the end of the line
    c[motion] - change [motion] with (replace)
    s - delete character and substitute text
    S - delete line and substitute text (same as cc)
    U - restore (undo) last changed line
    o - move to other end of marked area
    O - move to other corner of block

--- Command mode

    :%s/old/new/gc - replace all old with new throughout file with confirmations

--- Registers

    :reg[isters] - show registers content
    "xy - yank into register x
    "xp - paste contents of register

--- Special registers:

 * - clipboard contents (X11 primary)
 + - clipboard contents (X11 clipboard)
 / - last search pattern
 : - last command-line
 . - last inserted text
 - - last small (less than a line) delete

--- Macros

    qa - record macro a
    q - stop recording macro
    @a - run macro a
    @@ - rerun last run macro

--- Normal mode - cut and paste

    y$ or Y - yank (copy) to end of line
    P - put (paste) before cursor
    gp - put (paste) the clipboard after cursor and leave cursor after the new text
    gP - put (paste) before cursor and leave cursor after the new text
    d$ or D - delete (cut) to the end of the line

--- Normal mode - indent

    >ib - indent inner block with ()
    =iB - re-indent inner block with {}
    gg=G - re-indent entire buffer

--- Quickfix

    :cn[ext] - jump to the next match
    :cp[revious] - jump to the previous match
    :cope[n] - open a window containing the list of matches
    :ccl[ose] - close the quickfix window

--- Tabs

    :tabnew or :tabnew {page.words.file} - open a file in a new tab
    gt or :tabn[ext] - move to the next tab
    gT or :tabp[revious] - move to the previous tab

--- Split and modify window

    Ctrl + ws - split window
    Ctrl + wv - split window vertically
    Ctrl + ww - switch windows
    Ctrl + wq - quit a window
    Ctrl + wx - exchange current window with next one
    Ctrl + w= - make all windows equal height & width
    Ctrl + wH - make current window full height at far left (leftmost vertical window)
    Ctrl + wL - make current window full height at far right (rightmost vertical window)
    Ctrl + wJ - make current window full width at the very bottom (bottommost horizontal window)
    Ctrl + wK - make current window full width at the very top (topmost horizontal window)

===============================================================================
3. Plugin list                                             *audreyer-plugin-list*


telescope : Fuzzy finder for preview a file quickly
plenary : require by telescope - unknow why
packer : plugin manager
nvim-ts-autotag : autoclose and autorename html tag with treesitter
tokyonight : colortheme
nvim-help-audreyer : add audreyer help-page
nvim-tree : File explorer
nvim-web-devicons : require by lualine and nvim-tree for have nice icon
Comment : commentair shortcut
nvim-colorizer : add color when type color in hexa or letter
lualine : add status bar under window
nvim-treesitter : better indentation

# vim: filetype=help:ts=2
